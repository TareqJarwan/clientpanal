{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-client/add-client.component.css","webpack:///./src/app/components/add-client/add-client.component.html","webpack:///./src/app/components/add-client/add-client.component.ts","webpack:///./src/app/components/client-details/client-details.component.css","webpack:///./src/app/components/client-details/client-details.component.html","webpack:///./src/app/components/client-details/client-details.component.ts","webpack:///./src/app/components/clients/clients.component.css","webpack:///./src/app/components/clients/clients.component.html","webpack:///./src/app/components/clients/clients.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/edit-client/edit-client.component.css","webpack:///./src/app/components/edit-client/edit-client.component.html","webpack:///./src/app/components/edit-client/edit-client.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/not-found/not-found.component.css","webpack:///./src/app/components/not-found/not-found.component.html","webpack:///./src/app/components/not-found/not-found.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/settings/settings.component.css","webpack:///./src/app/components/settings/settings.component.html","webpack:///./src/app/components/settings/settings.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.css","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/register.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/client.service.ts","webpack:///./src/app/services/settings.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { RegisterGuard } from './guards/register.guard';\nimport { AuthGuard } from './guards/auth.guard';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { RouterModule, Routes } from '@angular/router';\n\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'regsiter', component: RegisterComponent, canActivate: [RegisterGuard] },\n  { path: 'client/add', component: AddClientComponent, canActivate: [AuthGuard] },\n  { path: 'client/edit/:id', component: EditClientComponent, canActivate: [AuthGuard] },\n  { path: 'client/:id', component: ClientDetailsComponent, canActivate: [AuthGuard] },\n  { path: 'settings', component: SettingsComponent, canActivate: [AuthGuard] },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [AuthGuard, RegisterGuard]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n    <flash-messages></flash-messages>\\n    <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'clientpanal';\n}\n","import { SettingsService } from './services/settings.service';\nimport { AuthService } from './services/auth.service';\nimport { ClientService } from './services/client.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireModule } from 'angularfire2';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { environment } from './../environments/environment';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    DashboardComponent,\n    ClientsComponent,\n    SidebarComponent,\n    AddClientComponent,\n    EditClientComponent,\n    ClientDetailsComponent,\n    LoginComponent,\n    RegisterComponent,\n    SettingsComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    FlashMessagesModule.forRoot(),\n    AngularFireModule.initializeApp(environment.firebase, 'clientpanel'),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n  ],\n  providers: [ClientService, AuthService, SettingsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-link\\\">\\n      <i class=\\\"fa fa-arrow-circle-o-left\\\"> Back To Dashboard</i>\\n    </a>\\n\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n\\n\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Add Client\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(clientForm)\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"firstName\\\">First Name</label>\\n        <input type=\\\"text\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': clientFirstName.errors && clientFirstName.touched }\\\"\\n          #clientFirstName=\\\"ngModel\\\" [(ngModel)]=\\\"client.firstName\\\" minlength=\\\"2\\\" required>\\n        <div [hidden]=\\\"!clientFirstName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n          First Name required\\n        </div>\\n        <div [hidden]=\\\"!clientFirstName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n          Must be at least 2 characters\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"lastName\\\">Last Name</label>\\n        <input type=\\\"text\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': clientLastName.errors && clientLastName.touched }\\\"\\n          #clientLastName=\\\"ngModel\\\" [(ngModel)]=\\\"client.lastName\\\" minlength=\\\"2\\\" required>\\n        <div [hidden]=\\\"!clientLastName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n          Last Name required\\n        </div>\\n        <div [hidden]=\\\"!clientLastName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n          Must be at least 2 characters\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': clientEmail.errors && clientEmail.touched }\\\"\\n          #clientEmail=\\\"ngModel\\\" [(ngModel)]=\\\"client.email\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"\\n          required>\\n        <div [hidden]=\\\"!clientEmail.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n          Email required\\n        </div>\\n        <div [hidden]=\\\"!clientEmail.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n          Email is not valid\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"phone\\\">Phone</label>\\n        <input type=\\\"text\\\" name=\\\"phone\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': clientPhone.errors && clientPhone.touched }\\\"\\n          #clientPhone=\\\"ngModel\\\" [(ngModel)]=\\\"client.phone\\\" minlength=\\\"10\\\" required>\\n        <div [hidden]=\\\"!clientPhone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n          Last Name required\\n        </div>\\n        <div [hidden]=\\\"!clientPhone.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n          Must be at least 10 characters\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"balance\\\">Balance</label>\\n        <input type=\\\"number\\\" name=\\\"balance\\\" class=\\\"form-control\\\" #clientBalance=\\\"ngModel\\\" [(ngModel)]=\\\"client.balance\\\"\\n          required [disabled]=\\\"disableBalanceOnAdd\\\">\\n      </div>\\n      <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n    </form>\\n  </div>\\n</div>\\n\"","import { SettingsService } from './../../services/settings.service';\nimport { Router } from '@angular/router';\nimport { ClientService } from './../../services/client.service';\nimport { Client } from './../../models/Client';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-add-client',\n  templateUrl: './add-client.component.html',\n  styleUrls: ['./add-client.component.css']\n})\nexport class AddClientComponent implements OnInit {\n  client: Client = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    balance: 0\n  }\n\n  disableBalanceOnAdd: boolean;\n  \n  @ViewChild('clientForm') form: any;\n  constructor(\n    private flashMessage: FlashMessagesService,\n    private clientService: ClientService,\n    private settingsService: SettingsService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.disableBalanceOnAdd = this.settingsService.getSettings().disableBalacneOnAdd;\n  }\n\n  onSubmit({ value, valid }: { value: Client, valid: boolean }) {\n    if (this.disableBalanceOnAdd) {\n      value.balance = 0;\n    }\n    if (!valid) {\n      //show error\n      this.flashMessage.show('Please Fill out the form correctly', {\n        cssClass: 'alert-danger',\n        timeout: 4000\n      });\n    } else {\n      // Add new client\n      this.clientService.addClient(value);\n      // Show messages\n      this.flashMessage.show('New client added', {\n        cssClass: 'alert-success',\n        timeout: 4000\n      });\n      //Redirect to Dashboard \n      this.router.navigate(['/']);\n\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-link\\\">\\n      <i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Back to Dashboard\\n    </a>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <div class=\\\"btn-group pull-right\\\">\\n      <a routerLink=\\\"/client/edit/{{ id }}\\\" class=\\\"btn btn-dark\\\">Edit</a>\\n      <button (click)=\\\"onDeleteClick()\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n    </div>\\n  </div>\\n</div>\\n\\n<hr>\\n\\n<div *ngIf=\\\"client\\\" class=\\\"card\\\">\\n  <h3 class=\\\"card-header\\\">{{ client.firstName }} {{ client.lastName }}</h3>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"cal-md-8 col-sm-6\\\">\\n        <h4>Client Id: {{ client.id }}</h4>\\n      </div>\\n      <div class=\\\"cal-md-8 col-sm-6\\\">\\n        <h3 class=\\\"pull-right\\\">\\n          Balance\\n          <span [class.text-danger]=\\\"hasBalance\\\" [class.text-success]=\\\"!hasBalance\\\">\\n            {{ client.balance | currency:'USD':\\\"symbol\\\" }}\\n          </span>\\n          <small>\\n            <a (click)=\\\"showBalanceUpdateInput = !showBalanceUpdateInput\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n            </a>\\n          </small>\\n        </h3>\\n        <div class=\\\"clearfix\\\">\\n          <form *ngIf=\\\"showBalanceUpdateInput\\\" (submit)=\\\"updateBalance()\\\">\\n            <div class=\\\"input-group\\\">\\n              <input type=\\\"text\\\" name=\\\"balance\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"client.balance\\\">\\n              <span class=\\\"input-group-btn\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update</button>\\n              </span>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<hr>\\n\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\">Contact Email: {{ client.email }}</li>\\n  <li class=\\\"list-group-item\\\">Contact Phone: {{ client.phone }}</li>\\n</ul>\\n\"","import { Client } from './../../models/Client';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ClientService } from './../../services/client.service';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-client-details',\n  templateUrl: './client-details.component.html',\n  styleUrls: ['./client-details.component.css']\n})\nexport class ClientDetailsComponent implements OnInit {\n  id: string;\n  client: Client;\n  hasBalance: boolean = false;\n  showBalacneUpdateInput: boolean = false;\n\n  constructor(\n    private clientService: ClientService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private flashMessages: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    // Get Id form the url\n    this.id = this.route.snapshot.params['id'];\n    this.clientService.getClient(this.id).subscribe(client => {\n      if (client != null) {\n        if (client.balance > 0) {\n          this.hasBalance = true;\n        }\n      }\n      this.client = client;\n    })\n  }\n\n  onDeleteClick() {\n    if (confirm('Are you sure ?')) {\n      this.clientService.deleteClient(this.client);\n      this.flashMessages.show('Client removed', {\n        cssClass: 'alert-success',\n        timeout: 4000\n      });\n      this.router.navigate(['/']);\n    }\n  }\n\n  updateBalance() {\n    this.clientService.updateClient(this.client);\n    this.flashMessages.show('Balance Updated', {\n      cssClass: 'alert-success',\n      timeout: 4000\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <h2><i class=\\\"fa fa-users\\\"></i> Clients</h2>\\n\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <h5 class=\\\"text-right text-secondary\\\">Total Owed: {{ totalOwed | currency:\\\"USD\\\":\\\"symbol\\\" }}</h5>\\n\\n  </div>\\n</div>\\n<table *ngIf=\\\"clients?.length > 0;else noClients\\\" class=\\\"table table-striped\\\">\\n  <thead class=\\\"thead-inverse\\\">\\n    <th>Name</th>\\n    <th>Email</th>\\n    <th>Balance</th>\\n    <th></th>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let client of clients\\\">\\n      <td>{{ client.firstName }} {{ client.lastName }}</td>\\n      <td>{{ client.email }}</td>\\n      <td>{{ client.balance | currency:\\\"USD\\\":\\\"symbol\\\"}}</td>\\n      <td><a routerLink=\\\"/client/{{ client.id }}\\\" class=\\\"btn btn-secondary btn-sm\\\"><i class=\\\"fa fa-arrow-circle-o-right\\\"></i> Details</a></td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<ng-template #noClients>\\n  <hr>\\n  <h5>There are no Clients in the system</h5>\\n</ng-template>\\n\"","import { Client } from './../../models/Client';\nimport { ClientService } from '../../services/client.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.css']\n})\nexport class ClientsComponent implements OnInit {\n  clients: Client[];\n  totalOwed: number;\n\n  constructor(private clientService: ClientService) { }\n\n  ngOnInit() {\n    this.clientService.getClients().subscribe(clients => {\n      this.clients = clients;\n      this.getTotalOwed();\n    });\n  }\n\n  getTotalOwed() {\n    const totals = this.clients.reduce((total, client) => {\n      return total + parseFloat(client.balance.toString());\n    }, 0);\n    this.totalOwed = totals;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-10\\\">\\n    <app-clients></app-clients>\\n  </div>\\n  <div class=\\\"col-md-2\\\">\\n    <app-sidebar></app-sidebar>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <a routerLink=\\\"/client/{{ id }}\\\" class=\\\"btn btn-link\\\">\\n        <i class=\\\"fa fa-arrow-circle-o-left\\\"> Back To Client</i>\\n      </a>\\n  \\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n  \\n  \\n    </div>\\n  </div>\\n  \\n  \\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Edit Client\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(clientForm)\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"firstName\\\">First Name</label>\\n          <input type=\\\"text\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': clientFirstName.errors && clientFirstName.touched }\\\"\\n            #clientFirstName=\\\"ngModel\\\" [(ngModel)]=\\\"client.firstName\\\" minlength=\\\"2\\\" required>\\n          <div [hidden]=\\\"!clientFirstName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n            First Name required\\n          </div>\\n          <div [hidden]=\\\"!clientFirstName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n            Must be at least 2 characters\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"lastName\\\">Last Name</label>\\n          <input type=\\\"text\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': clientLastName.errors && clientLastName.touched }\\\"\\n            #clientLastName=\\\"ngModel\\\" [(ngModel)]=\\\"client.lastName\\\" minlength=\\\"2\\\" required>\\n          <div [hidden]=\\\"!clientLastName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n            Last Name required\\n          </div>\\n          <div [hidden]=\\\"!clientLastName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n            Must be at least 2 characters\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': clientEmail.errors && clientEmail.touched }\\\"\\n            #clientEmail=\\\"ngModel\\\" [(ngModel)]=\\\"client.email\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"\\n            required>\\n          <div [hidden]=\\\"!clientEmail.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n            Email required\\n          </div>\\n          <div [hidden]=\\\"!clientEmail.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n            Email is not valid\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"phone\\\">Phone</label>\\n          <input type=\\\"text\\\" name=\\\"phone\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': clientPhone.errors && clientPhone.touched }\\\"\\n            #clientPhone=\\\"ngModel\\\" [(ngModel)]=\\\"client.phone\\\" minlength=\\\"10\\\" required>\\n          <div [hidden]=\\\"!clientPhone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n            Last Name required\\n          </div>\\n          <div [hidden]=\\\"!clientPhone.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n            Must be at least 10 characters\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"balance\\\">Balance</label>\\n          <input type=\\\"number\\\" name=\\\"balance\\\" class=\\\"form-control\\\" #clientBalance=\\\"ngModel\\\" [(ngModel)]=\\\"client.balance\\\"\\n            required [disabled]=\\\"disableBalanceOnEdit\\\">\\n        </div>\\n        <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n      </form>\\n    </div>\\n  </div>\\n  \"","import { SettingsService } from './../../services/settings.service';\nimport { Client } from './../../models/Client';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ClientService } from './../../services/client.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-client',\n  templateUrl: './edit-client.component.html',\n  styleUrls: ['./edit-client.component.css']\n})\nexport class EditClientComponent implements OnInit {\n  id: string;\n  client: Client = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    balance: 0\n  };\n  disableBalanceOnEdit: boolean;\n\n  constructor(\n    private clientService: ClientService,\n    private settingsService: SettingsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private flashMessages: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    this.disableBalanceOnEdit = this.settingsService.getSettings().disableBalanceOnEdit;\n    // Get Id form the url\n    this.id = this.route.snapshot.params['id'];\n    // Get client\n    this.clientService.getClient(this.id).subscribe(client => {\n      this.client = client;\n    });\n  }\n\n  onSubmit({ value, valid }: { value: Client, valid: boolean }) {\n    if (!valid) {\n      this.flashMessages.show('Please fill out the form correctly', {\n        cssClass: 'alert-danger',\n        timeout: 4000\n      });\n    } else {\n      // Add to client\n      value.id = this.id;\n      // Update Client\n      this.clientService.updateClient(value);\n      // Show Success message\n      this.flashMessages.show('Client Updated', {\n        cssClass: 'alert-success',\n        timeout: 4000\n      });\n      this.router.navigate([`/client/${this.id}`])\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 mx-auto\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h1 class=\\\"h1 text-center pb-4 pt-3\\\">\\n          <span class=\\\"text-primary\\\"><i class=\\\"fa fa-lock\\\"> Client Panel</i></span> Login\\n        </h1>\\n        <form (submit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email</label>\\n            <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" required>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" required>\\n          </div>\\n          <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary btn-block\\\">\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessages: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    this.authService.getAuth().subscribe(auth => {\n      if (auth) {\n        this.router.navigate(['/']);\n      } \n    })\n  }\n\n  onSubmit() {\n    this.authService.login(this.email, this.password)\n      .then(res => {\n        this.flashMessages.show('You are now logged in', {\n          cssClass: 'alert-success',\n          timput: 4000\n        });\n        this.router.navigate(['/']);\n      }).catch(err => {\n        this.flashMessages.show(err.message, {\n          cssClass: 'alert-danger',\n          timput: 10000\n        });\n      })\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary mb-4\\\">\\n  <div class=\\\"container\\\">\\n    <a routerLink=\\\"/\\\" class=\\\"navbar-brand\\\">ClientPanal</a>\\n    <button type=\\\"button\\\" class=\\\"navbar-toggler\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/\\\" class=\\\"nav-link\\\">Dashboard</a>\\n        </li>\\n      </ul>\\n\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li *ngIf=\\\"!isLoggedIn  && showRegister\\\" class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/regsiter\\\" class=\\\"nav-link\\\">Register</a>\\n        </li>\\n        <li *ngIf=\\\"!isLoggedIn && showRegister\\\" class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/login\\\" class=\\\"nav-link\\\">Login</a>\\n        </li>\\n        <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n          <a htef=\\\"#\\\" class=\\\"nav-link\\\">{{ loogedInUser }}</a>\\n        </li>\\n        <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/settings\\\" class=\\\"nav-link\\\">Settings</a>\\n        </li>\\n        <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n          <a href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\" class=\\\"nav-link\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { SettingsService } from './../../services/settings.service';\nimport { AuthService } from './../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  isLoggedIn: boolean;\n  loogedInUser: string;\n  showRegister: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private settingsService: SettingsService,\n    private router: Router,\n    private flashMessages: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    this.authService.getAuth().subscribe(auth => {\n      if (auth) {\n        this.loogedInUser = auth.email;\n        this.isLoggedIn = true;\n      } else {\n        this.isLoggedIn = false;\n      }\n    });\n    this.showRegister = this.settingsService.getSettings().allowRegistration;\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessages.show('You are logged out', {\n      cssClass: 'alert-success',\n      timeout: 4000\n    });\n    this.router.navigate(['/login']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 mx-auto\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h1 class=\\\"h1 text-center pb-4 pt-3\\\">\\n            <span class=\\\"text-primary\\\"><i class=\\\"fa fa-lock\\\"> Client Panel</i></span> Register\\n          </h1>\\n          <form (submit)=\\\"onSubmit()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">Email</label>\\n              <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" required>\\n            </div>\\n  \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"password\\\">Password</label>\\n              <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" required>\\n            </div>\\n            <input type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"btn btn-primary btn-block\\\">\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \"","import { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  email: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessages: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    this.authService.getAuth().subscribe(auth => {\n      if (auth) {\n        this.router.navigate(['/']);\n      }\n    })\n  }\n\n  onSubmit() {\n    this.authService.register(this.email, this.password)\n      .then(res => {\n        this.flashMessages.show('You are now registered and logged in', {\n          cssClass: 'alert-success',\n          timput: 4000\n        });\n        this.router.navigate(['/']);\n      }).catch(err => {\n        this.flashMessages.show(err.message, {\n          cssClass: 'alert-danger',\n          timput: 10000\n        });\n      })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-link\\\">\\n      <i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Back To Dashboard\\n    </a>\\n  </div>\\n\\n  <div class=\\\"col-md-6\\\"></div>\\n</div>\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Edit Settings\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <form (submit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"allowRegistration\\\">Allow Registration</label>\\n        <input type=\\\"checkbox\\\" name=\\\"allowRegistration\\\" class=\\\"form-control\\\" [checked]=\\\"settings.allowRegistration\\\"\\n          (change)=\\\"settings.allowRegistration = !settings.allowRegistration\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"disableBalacneOnAdd\\\">Disable Balance On Add</label>\\n        <input type=\\\"checkbox\\\" name=\\\"disableBalacneOnAdd\\\" class=\\\"form-control\\\" [checked]=\\\"settings.disableBalacneOnAdd\\\"\\n          (change)=\\\"settings.disableBalacneOnAdd = !settings.disableBalacneOnAdd\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"disableBalanceOnEdit\\\">Disable Balance On Edit</label>\\n        <input type=\\\"checkbox\\\" name=\\\"disableBalanceOnEdit\\\" class=\\\"form-control\\\" [checked]=\\\"settings.disableBalanceOnEdit\\\"\\n          (change)=\\\"settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit\\\">\\n      </div>\\n      <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n    </form>\\n  </div>\\n</div>\\n\"","import { Settings } from './../../models/Settings';\nimport { SettingsService } from './../../services/settings.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  settings: Settings;\n  constructor(\n    private settingsService: SettingsService,\n    private router: Router,\n    private flashMessages: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    this.settings = this.settingsService.getSettings();\n  }\n\n  onSubmit() {\n    this.settingsService.changeSettings(this.settings);\n    this.flashMessages.show('Settings Saved', {\n      cssClass: 'alert-success',\n      timout: 4000\n    });\n    this.router.navigate(['/']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<a routerLink=\\\"/client/add\\\" class=\\\"btn btn-success btn-block\\\"><i class=\\\"fa fa-plus\\\"> New</i></a>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Observable } from 'rxjs';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Router, CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private afAuth: AngularFireAuth\n    ) { }\n\n    canActivate(): Observable<boolean> {\n        return this.afAuth.authState.pipe(map(auth => {\n            if (!auth) {\n                this.router.navigate(['/login']);\n                return false;\n            } else {\n                return true;\n            }\n        }));\n    }\n}","import { Router, CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { SettingsService } from '../services/settings.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RegisterGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private settingsService: SettingsService,\n    ) { }\n\n    canActivate(): boolean {\n        if (this.settingsService.settings.allowRegistration) {\n            return true;\n        } else {\n            this.router.navigate(['/login']);\n            return false;\n        }\n    }\n}","import { map } from 'rxjs/operators';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private afAuth: AngularFireAuth\n  ) { }\n\n  login(email: string, password: string) {\n    return new Promise((resolve, reject) => {\n      this.afAuth.auth.signInWithEmailAndPassword(email, password)\n        .then(userData => resolve(userData), err => reject(err));\n    });\n  }\n\n  getAuth() {\n    return this.afAuth.authState.pipe(map(auth => auth));\n  }\n\n  logout() {\n    this.afAuth.auth.signOut();\n  }\n\n  register(email: string, password: string) {\n    return new Promise((resolve, reject) => {\n      this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n        .then(userData => resolve(userData), err => reject(err));\n    });\n  }\n}\n","import { Client } from './../models/Client';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable()\nexport class ClientService {\n  clientsCollection: AngularFirestoreCollection<Client>;\n  clientDoc: AngularFirestoreDocument<Client>;\n  clients: Observable<Client[]>;\n  client: Observable<Client>;\n\n  constructor(private afs: AngularFirestore) {\n    this.clientsCollection = this.afs.collection('clients', ref => ref.orderBy('lastName', 'asc'));\n  }\n\n  getClients(): Observable<Client[]> {\n    //Get clients with id\n    return this.clients = this.clientsCollection.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Client;\n        data.id = a.payload.doc.id;\n        return data;\n      }))\n    );\n  };\n\n  addClient(client: Client) {\n    this.clientsCollection.add(client);\n  }\n\n  getClient(id: string): Observable<Client> {\n    this.clientDoc = this.afs.doc<Client>(`clients/${id}`);\n    return this.client = this.clientDoc.snapshotChanges().pipe(\n      map(action => {\n        if (action.payload.exists === false) {\n          return null;\n        } else {\n          const data = action.payload.data() as Client;\n          data.id = action.payload.id;\n          return data;\n        }\n      }));\n  }\n\n  updateClient(client: Client) {\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.update(client);\n  }\n\n  deleteClient(client: Client) {\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.delete();\n  }\n}\n","import { Settings } from './../models/Settings';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  settings: Settings = {\n    allowRegistration: true,\n    disableBalacneOnAdd: true,\n    disableBalanceOnEdit: true\n  }\n  constructor() {\n    if (localStorage.getItem('settings') != null) {\n      this.settings = JSON.parse(localStorage.getItem('settings'));\n    }\n  }\n\n  getSettings(): Settings {\n    return this.settings;\n  }\n\n  changeSettings(settings: Settings) {\n    localStorage.setItem('settings', JSON.stringify(settings));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyCXx58G0BOkRhwJ8080o9ZRJvmD31OT04o\",\n    authDomain: \"clientpanalprod-35cd5.firebaseapp.com\",\n    databaseURL: \"https://clientpanalprod-35cd5.firebaseio.com\",\n    projectId: \"clientpanalprod-35cd5\",\n    storageBucket: \"clientpanalprod-35cd5.appspot.com\",\n    messagingSenderId: \"1053016968604\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}